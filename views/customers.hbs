{{!--
Citation for following: Customer handlebars, with the exception of formatting the tables & naming schemes
Date: 3/17/2025
Adapted From: NodeJS Starter App
Link: https://github.com/osu-cs340-ecampus/nodejs-starter-app/tree/f805913e77a460e16291bb69ce35740630fd0fc9
--}}
{{!-- Create a table --}}
<nav>
        <a href="/">Home</a>
        <a href="/customers">Customers</a>
        <a href="/deliveries">Deliveries</a>
        <a href="/invoices">Invoices</a>
        <a href="/invoicedetails">Invoice Details</a>
        <a href="/products">Products</a>
</nav>

{{!-- Formats the table  --}}
<h2>Customers</h2>
<table id="customer-table">
    <thead>
        <tr>
            {{#each data.[0]}}
            <th>
                {{@key}}
            </th>
            {{/each}}
            <th>delete</th>
        </tr>
    </thead>
    <tbody>
        {{!--This functionality was heavily inspired from the starter app --}}
        {{#each data}}
        <tr data-value={{this.customerID}}>
            <td>{{this.customerID}}</td>
            <td>{{this.name}}</td>
            <td>{{this.address}}</td>
            <td class="phone-number">{{this.phone}}</td>
            <td><button onclick="deleteCustomer({{this.customerID}})">Delete</button></td>
        </tr>
        {{/each}}
    </tbody>
</table>

{{!--This script is inspired by many different javascript formatting techniques for phone numbers. No specific source encompasses this code--}}
<script>
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".phone-number").forEach(function (td) {
        let phone = td.textContent.replace(/\D/g, ""); // Remove non-numeric characters
        if (phone.length === 10) {
            td.textContent = phone.replace(/(\d{3})(\d{3})(\d{4})/, "$1-$2-$3");
        }
    });
});
</script>
<script src="./js/delete_customer.js"></script>

<!-- /views/index.hbs -->
<h2>Add Customer</h2>
<form id="add-customer-form" method="POST" action="/add-customer-form">
    
    <label for="input-name">Name: </label>
    <input type="text" name="input-name" id="input-name" required>

    <label for="input-address">Address: </label>
    <input type="text" name="input-address" id="input-address">

    <label for="input-phone">Phone: </label>
    <input type="tel" name="input-phone" id="input-phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" placeholder="111-111-1111">

    <input type="submit">
</form>
{{!--Creates update customer button, inspired by the starter app --}}
<h2>Update Customer</h2>
<form id="update-customer-form">
    <label for="update-customer-form">Name: </label>
    <select name="update-customer-form" id="update-name">
        <option value="">Select a Customer</option>
        {{#each data}}
        <option value="{{this.customerID}}">{{this.name}}</option>
        {{/each}}
    </select>

    <label for="update-address">Address: </label>
    <input type="text" name="update-address" id="update-address">

    <label for="update-phone">Phone: </label>
    <input type="tel" name="update-phone" id="update-phone" pattern="[0-9]{3}-[0-9]{3}-[0-9]{4}" placeholder="111-111-1111">

    <input type="submit">
</form>
<script src="./js/update_customer.js"></script>